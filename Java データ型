①整数型・・・byte, short, int ,long→整数を記憶するためのデータ型
②浮動小数点型・・・double, float→小数を含む数値を記憶するためのデータ型
③文字型・・・char→一つの文字一つの整数に置き換えて記憶するためのデータ型
④論理型・・・true, false→真偽判定をするためのデータ型
⑤文字列型・・・文字を繋いだものを記憶するためのデータ型


①整数型
プログラムに書き込んだ整数の値は全てint型とみなされる
ex)  System.out.println(128);    //整数128はint型
      →int型は約21億まで記憶することができる。一般的にはこれで事足りる。
      　　どうしても必要な際に他の型を利用する
byte型・・・8ビットを表現する整数[-128~127]まで表現できる。→画像やサウンドなどのデータの塊を表すために使う。
long型・・・64ビットまで表現できる。→int型に収まらない大きな値を扱うときに利用する。（±922京3000兆まで表すことができる）
        ※int型と区別するために値の末尾にLをつけなくてはならない。

②浮動小数点型
小数点のつく値。また実数型と呼ばれる。
ex)  1.2345は12345/10000とも表すことができる。
    　　この際の12345を仮数部、10000を指数部という。また、12345e-4と表記することで同様の意味を持つ。
double型・・・64ビットで表現する浮動小数点。プログラムに書き込む浮動小数点は全てdouble型になる。仮数部が15桁分しかないので16桁以上は誤差が出てしまう。
float型・・・32ビットで表現する浮動小数点。有効桁数はdouble型の半分のためあまり利用されない。利用する場合は末尾にFをつけてdouble型と区別する。

③文字型
一つの文字を一つの整数に置き換えて記憶する。ただの整数であっても文字を表す値のため値を「文字コード」という。
Java言語の文字コードは世界中の文字を集めたUnicodeという文字コードに準拠している。
char型・・・('')で囲い文字コードで書く場合と単純に単一文字を（''）で囲う表現の仕方がある。

④論理型
boolean型・・・命題が正しいか間違っているかを問題とする場合にその命題が、真（true）/偽(false)のどちらかを返す。
これをコンピューターのデータ型にしたものが論理型である。

⑤文字列型
String型・・・文字をいくつか繋いだもの。必ず（""）で囲う
（""）で囲んだ場合は一文字でも文字列型として扱う。
